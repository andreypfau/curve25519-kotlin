@file:Suppress("OPT_IN_USAGE")

package com.github.andreypfau.curve25519.scalar

import kotlin.test.Test
import kotlin.test.assertContentEquals

class UnpackedScalarTest {
    /// Note: x is 2^253-1 which is slightly larger than the largest scalar produced by
    /// this implementation (l-1), and should show there are no overflows for valid scalars
    ///
    /// x = 14474011154664524427946373126085988481658748083205070504932198000989141204991
    /// x = 7237005577332262213973186563042994240801631723825162898930247062703686954002 mod l
    /// x = 3057150787695215392275360544382990118917283750546154083604586903220563173085*R mod l in Montgomery form
    val X = Scalar52(
        0x000fffffffffffffu, 0x000fffffffffffffu, 0x000fffffffffffffu, 0x000fffffffffffffu,
        0x00001fffffffffffu
    )

    /// x^2 = 3078544782642840487852506753550082162405942681916160040940637093560259278169 mod l
    val XX = Scalar52(
        0x0001668020217559u, 0x000531640ffd0ec0u, 0x00085fd6f9f38a31u, 0x000c268f73bb1cf4u,
        0x000006ce65046df0u
    )

    /// x^2 = 4413052134910308800482070043710297189082115023966588301924965890668401540959*R mod l in Montgomery form
    val XX_MONT = Scalar52(
        0x000c754eea569a5cu, 0x00063b6ed36cb215u, 0x0008ffa36bf25886u, 0x000e9183614e7543u,
        0x0000061db6c6f26fu
    )

    /// y = 6145104759870991071742105800796537629880401874866217824609283457819451087098
    val Y = Scalar52(
        0x000b75071e1458fau, 0x000bf9d75e1ecdacu, 0x000433d2baf0672bu, 0x0005fffcc11fad13u,
        0x00000d96018bb825u
    )

    /// x*y = 36752150652102274958925982391442301741 mod l
    val XY = Scalar52(
        0x000ee6d76ba7632du, 0x000ed50d71d84e02u, 0x00000000001ba634u, 0x0000000000000000u,
        0x0000000000000000u
    )

    /// x*y = 658448296334113745583381664921721413881518248721417041768778176391714104386*R mod l in Montgomery form
    val XY_MONT = Scalar52(
        0x0006d52bf200cfd5u, 0x00033fb1d7021570u, 0x000f201bc07139d8u, 0x0001267e3e49169eu,
        0x000007b839c00268u
    )

    /// a = 2351415481556538453565687241199399922945659411799870114962672658845158063753
    val A = Scalar52(
        0x0005236c07b3be89u, 0x0001bc3d2a67c0c4u, 0x000a4aa782aae3eeu, 0x0006b3f6e4fec4c4u,
        0x00000532da9fab8cu
    )

    /// b = 4885590095775723760407499321843594317911456947580037491039278279440296187236
    val B = Scalar52(
        0x000d3fae55421564u, 0x000c2df24f65a4bcu, 0x0005b5587d69fb0bu, 0x00094c091b013b3bu,
        0x00000acd25605473u
    )

    /// a+b = 0
    /// a-b = 4702830963113076907131374482398799845891318823599740229925345317690316127506
    val AB = Scalar52(
        0x000a46d80f677d12u, 0x0003787a54cf8188u, 0x0004954f0555c7dcu, 0x000d67edc9fd8989u,
        0x00000a65b53f5718u
    )

    /// c = (2^512 - 1) % l = 1627715501170711445284395025044413883736156588369414752970002579683115011840
    val C = Scalar52(
        0x000611e3449c0f00u, 0x000a768859347a40u, 0x0007f5be65d00e1bu, 0x0009a3dceec73d21u,
        0x00000399411b7c30u
    )

    @Test
    fun mulMax() {
        val res = X * X
        assertContentEquals(XX.value, res.value)
    }
}
